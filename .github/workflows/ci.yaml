name: CI
on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13
      - name: Install
        run: |
          poetry install
          make check-lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v2
        with:
          tags: test-image:local
          push: false
      - name: Smoke Test
        run: |
          docker run -d -p 8080:8080 test-image:local
          sleep 3
          curl 'localhost:8080/openapi.json' --fail
          curl -X 'POST' 'localhost:8080/ocr/pdf?force_ocr=true' -H 'accept: application/json' -H 'Content-Type: multipart/form-data' -F 'file=@lorem.pdf;type=application/pdf' --fail -o output.pdf

  push:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: sha
        run: echo "::set-output name=sha::$(git describe --always --tags --dirty)"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/arm64, linux/amd64
          tags: |
            ghcr.io/leonnicolas/ocrmypdf-http:latest
            ghcr.io/leonnicolas/ocrmypdf-http:${{ steps.sha.outputs.sha }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: sha
        run: echo "::set-output name=sha::$(git describe --always --tags --dirty)"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build Container
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          platforms: linux/arm64, linux/amd64
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
